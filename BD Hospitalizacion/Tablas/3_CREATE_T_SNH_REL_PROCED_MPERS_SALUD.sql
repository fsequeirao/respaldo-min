
CREATE SEQUENCE HOSPITALARIO.SNH_S_DET_PROCED_MPERSSALUD_ID
  START WITH 1
  MAXVALUE 9999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  ORDER
  NOKEEP
  GLOBAL;
  
--ALTER TABLE HOSPITALARIO.SNH_REL_PROCED_MPERS_SALUD
--RENAME COLUMN ECHA_REGISTRO TO FECHA_REGISTRO


GRANT ALTER, SELECT ON HOSPITALARIO.SNH_S_DET_PROCED_MPERSSALUD_ID TO CATALOGOS, SEGURIDAD, VIGILANCIA, SIPAI;    

CREATE TABLE HOSPITALARIO.SNH_REL_PROCED_MPERS_SALUD
(
DET_PROCED_MPERSSALUD_ID  NUMBER(10)         DEFAULT HOSPITALARIO.SNH_S_DET_PROCED_MPERSSALUD_ID.NEXTVAL CONSTRAINT PK_RELPROCE_MPERSALUD_ID PRIMARY KEY NOT NULL,
DET_PROCEDIMIENTO_ID      NUMBER(10)         CONSTRAINT NNC_RELPROCE_PROCED_ID NOT NULL,
MPERS_SALUD_ID            NUMBER(10)         CONSTRAINT NNC_RELPROCE_MPERSSALUD_ID NOT NULL,
ES_PRINCIPAL              NUMBER(1)          CONSTRAINT NNC_RELPROCE_ES_PRINCIPAL NOT NULL,
UNIDAD_SALUD_ID           NUMBER(10)         CONSTRAINT NNC_RELPROCE_USALUD NOT NULL,
ESTADO_REGISTRO_ID        NUMBER(10)         CONSTRAINT NNC_RELPROCE_DET_ESTADOREG NOT NULL,
USUARIO_REGISTRO          VARCHAR2(50 BYTE)  CONSTRAINT NNC_RELPROCE_DET_USR_REG NOT NULL,
FECHA_REGISTRO             TIMESTAMP(0)       DEFAULT CURRENT_TIMESTAMP CONSTRAINT NNC_RELPROCE_FEC_REG NOT NULL,
USUARIO_MODIFICACION      VARCHAR2(50 BYTE),
FECHA_MODIFICACION        TIMESTAMP(0),
USUARIO_PASIVA            VARCHAR2(50 BYTE),
FECHA_PASIVA              TIMESTAMP(0),
USUARIO_ELIMINA           VARCHAR2(50 BYTE),
FECHA_ELIMINA             VARCHAR2(50 BYTE)  
);


CREATE INDEX HOSPITALARIO.IDX_RELPROCE_DETPROCED_ID ON HOSPITALARIO.SNH_REL_PROCED_MPERS_SALUD
(DET_PROCEDIMIENTO_ID);


CREATE INDEX HOSPITALARIO.IDX_RELPROCE_MPERSALUD ON HOSPITALARIO.SNH_REL_PROCED_MPERS_SALUD
(MPERS_SALUD_ID);


CREATE INDEX HOSPITALARIO.IDX_RELPROCE_DETPROCID_ESPRIN ON HOSPITALARIO.SNH_REL_PROCED_MPERS_SALUD
(DET_PROCEDIMIENTO_ID, ES_PRINCIPAL);



CREATE OR REPLACE TRIGGER TRG_AUD_SNH_REL_PROCED_PROCED
BEFORE INSERT OR UPDATE ON SNH_REL_PROCED_MPERS_SALUD FOR EACH ROW
BEGIN
    IF INSERTING THEN
      -- :NEW.DET_PROCED_MPERSSALUD_ID  := HOSPITALARIO.SNH_S_DET_PROCED_MPERSSALUD_ID.NEXTVAL;
       :NEW.FECHA_REGISTRO            := SYSDATE;
    ELSE
       IF :NEW.USUARIO_MODIFICACION IS NULL THEN
           RAISE_APPLICATION_ERROR (-20000, 'El usuario modificación no puede quedar nulo.');
       ELSE
       :NEW.FECHA_MODIFICACION   := SYSDATE;
       END IF;
    END IF;
END;
/


-- estado registro
CREATE OR REPLACE TRIGGER HOSPITALARIO.TRG_SNH_REL_PROCED_ESTREG
BEFORE INSERT OR UPDATE OF ESTADO_REGISTRO_ID ON HOSPITALARIO.SNH_REL_PROCED_MPERS_SALUD FOR EACH ROW
BEGIN
    IF INSERTING THEN
      IF  (:NEW.ESTADO_REGISTRO_ID IS NOT NULL AND :NEW.ESTADO_REGISTRO_ID > 0)   THEN
             DECLARE
              vCONTEO     SIMPLE_INTEGER := 0;
              vCatalogoId CATALOGOS.SBC_CAT_CATALOGOS.CATALOGO_ID%TYPE;
             BEGIN
              SELECT COUNT (1)
                INTO vCONTEO
                FROM CATALOGOS.SBC_CAT_CATALOGOS
               WHERE CATALOGO_ID = :NEW.ESTADO_REGISTRO_ID AND
                     PASIVO = 0 AND
                     CATALOGO_SUP IS NOT NULL;
                
                CASE vCONTEO 
                WHEN 0 THEN
                     RAISE_APPLICATION_ERROR (-20000, 'El estado del registro, no es un valor valido. Estado registro id: '||:NEW.ESTADO_REGISTRO_ID);
                ELSE
                    BEGIN
                      vCONTEO := 0;
                      SELECT CATALOGO_SUP
                        INTO vCatalogoId
                        FROM CATALOGOS.SBC_CAT_CATALOGOS
                       WHERE CATALOGO_ID = :NEW.ESTADO_REGISTRO_ID AND
                             PASIVO = 0 ;
                    
                        BEGIN
                          SELECT COUNT (1)
                            INTO vCONTEO
                            FROM CATALOGOS.SBC_CAT_CATALOGOS
                           WHERE CATALOGO_ID = vCatalogoId AND
                                 PASIVO = 0 AND
                                 CODIGO = 'STREG';       
                           CASE vCONTEO 
                           WHEN 0 THEN
                                RAISE_APPLICATION_ERROR (-20000, 'El estado registro, no es un valor valido. Estado registro id: '||:NEW.ESTADO_REGISTRO_ID);                
                           ELSE NULL;
                           END CASE;
                        END;  
                    END;
                END CASE;
             END;
      END IF;
    ELSIF UPDATING THEN
       IF :NEW.ESTADO_REGISTRO_ID IS NOT NULL THEN
         IF NVL(:NEW.ESTADO_REGISTRO_ID,0) != NVL(:OLD.ESTADO_REGISTRO_ID,0) THEN
             DECLARE
              vCONTEO SIMPLE_INTEGER := 0;
              vCatalogoId CATALOGOS.SBC_CAT_CATALOGOS.CATALOGO_ID%TYPE;
             BEGIN
              SELECT COUNT (1)
                INTO vCONTEO
                FROM CATALOGOS.SBC_CAT_CATALOGOS
               WHERE CATALOGO_ID = :NEW.ESTADO_REGISTRO_ID AND
                     PASIVO = 0 AND
                     CATALOGO_SUP IS NOT NULL;
                
                CASE vCONTEO 
                WHEN 0 THEN
                     RAISE_APPLICATION_ERROR (-20000, 'El estado registro, no es un valor valido. Estado registro id: '||:NEW.ESTADO_REGISTRO_ID);
                ELSE
                    BEGIN
                      vCONTEO := 0;
                      SELECT CATALOGO_SUP
                        INTO vCatalogoId
                        FROM CATALOGOS.SBC_CAT_CATALOGOS
                       WHERE CATALOGO_ID = :NEW.ESTADO_REGISTRO_ID AND
                             PASIVO = 0 ;
                    
                        BEGIN
                          SELECT COUNT (1)
                            INTO vCONTEO
                            FROM CATALOGOS.SBC_CAT_CATALOGOS
                           WHERE CATALOGO_ID = vCatalogoId AND
                                 PASIVO = 0 AND
                                 CODIGO = 'STREG';       
                           CASE vCONTEO 
                           WHEN 0 THEN
                                RAISE_APPLICATION_ERROR (-20000, 'El estado registro, no es un valor valido. Estado registro id: '||:NEW.ESTADO_REGISTRO_ID);                
                           ELSE NULL;
                           END CASE;
                        END;  
                    END;
                END CASE;            
             END;  
         END IF;
       END IF;
    END IF;
END;
/



ALTER TABLE HOSPITALARIO.SNH_REL_PROCED_MPERS_SALUD ADD (
  CONSTRAINT FRK_RELPROCED_DETPROC_ID 
  FOREIGN KEY (DET_PROCEDIMIENTO_ID) 
  REFERENCES HOSPITALARIO.SNH_DET_PROCEDIMIENTOS (ADMSRV_DET_PROC_ID)
  ENABLE VALIDATE,
  CONSTRAINT FRK_RELPROCED_MPRSLD_ID 
  FOREIGN KEY (MPERS_SALUD_ID) 
  REFERENCES CATALOGOS.SBC_MST_MPERS_SALUD (MPERS_SALUD_ID) 
  ENABLE VALIDATE, 
  CONSTRAINT FRK_RELPROCED_UNIDAD_SALUD_ID 
  FOREIGN KEY (UNIDAD_SALUD_ID) 
  REFERENCES CATALOGOS.SBC_CAT_UNIDADES_SALUD (UNIDAD_SALUD_ID)
  ENABLE VALIDATE,
  CONSTRAINT FRK_RELPROCED_ESTADO_REG_ID 
  FOREIGN KEY (ESTADO_REGISTRO_ID) 
  REFERENCES CATALOGOS.SBC_CAT_CATALOGOS (CATALOGO_ID)
  ENABLE VALIDATE,  
  CONSTRAINT FRK_RELPROCED_USR_REGISTRO 
  FOREIGN KEY (USUARIO_REGISTRO) 
  REFERENCES SEGURIDAD.SCS_MST_USUARIOS (USERNAME)
  ENABLE VALIDATE,
  CONSTRAINT FRK_RELPROCED_USR_MODIFCACION 
  FOREIGN KEY (USUARIO_MODIFICACION) 
  REFERENCES SEGURIDAD.SCS_MST_USUARIOS (USERNAME)
  ENABLE VALIDATE,
  CONSTRAINT FRK_RELPROCED_USR_PASIVO 
  FOREIGN KEY (USUARIO_PASIVA) 
  REFERENCES SEGURIDAD.SCS_MST_USUARIOS (USERNAME)
  ENABLE VALIDATE  
  );