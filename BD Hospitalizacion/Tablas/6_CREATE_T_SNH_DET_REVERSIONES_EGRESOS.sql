


CREATE SEQUENCE HOSPITALARIO.SNH_S_REVERSION_EGRESO_ID
  START WITH 1
  MAXVALUE 9999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  ORDER
  NOKEEP
  GLOBAL;
  

GRANT ALTER, SELECT ON HOSPITALARIO.SNH_S_REVERSION_EGRESO_ID TO CATALOGOS, SEGURIDAD, VIGILANCIA, SIPAI; 

---ALTER TABLE HOSPITALARIO.SNH_DET_REVERSIONES_EGRESOS MODIFY(REVERSION_EGRESO_ID DEFAULT HOSPITALARIO.SNH_S_REVERSION_EGRESO_ID.NEXTVAL);
   

CREATE TABLE HOSPITALARIO.SNH_DET_REVERSIONES_EGRESOS
(
 REVERSION_EGRESO_ID           NUMBER(10)          DEFAULT HOSPITALARIO.SNH_S_REVERSION_EGRESO_ID.NEXTVAL CONSTRAINT PK_DETREV_REVERSION_EGRESO_ID PRIMARY KEY NOT NULL,  --       CONSTRAINT PK_DETREV_REVERSION_EGRESO_ID PRIMARY KEY NOT NULL,
 INGRESO_ID                    NUMBER(10)          CONSTRAINT NNC_DETREV_INGRESO_ID NOT NULL,
 RAZON_REVERSION_ID            NUMBER(10)          CONSTRAINT NNC_DETREV_RAZON_REVERSION_ID NOT NULL,
 COMENTARIOS                   VARCHAR2(4000 BYTE) CONSTRAINT NNC_DETREV_COMENTARIOS NOT NULL,
 MPERSALUD_EGRESO_ID           NUMBER(10),
 FECHA_REVERSION               TIMESTAMP(0)        CONSTRAINT NNC_DETREV_FEC_REVERSION NOT NULL,
 HORA_REVERSION                VARCHAR2(15 BYTE)   CONSTRAINT NNC_DETREV_HORA_REVERSION NOT NULL,
 REFERENCIA_CANCELADA_ID       NUMBER(10),
 CONTRAREFERENCIA_CANCELADA_ID NUMBER(10),
 ESTADO_REGISTRO_ID            NUMBER(10)          CONSTRAINT NNC_DETREV_ESTADOREG NOT NULL,
 USUARIO_REGISTRO              VARCHAR2(50 BYTE)   CONSTRAINT NNC_DETREV_USR_REG NOT NULL,
 FECHA_REGISTRO                TIMESTAMP(0)        DEFAULT CURRENT_TIMESTAMP CONSTRAINT NNC_DETREV_FEC_REG NOT NULL,
 USUARIO_MODIFICACION          VARCHAR2(50 BYTE),
 FECHA_MODIFICACION            TIMESTAMP(0),
 USUARIO_PASIVA                VARCHAR2(50 BYTE),
 FECHA_PASIVA                  TIMESTAMP(0),
 USUARIO_ELIMINA               VARCHAR2(50 BYTE),
 FECHA_ELIMINA                 VARCHAR2(50 BYTE)  
 );


CREATE OR REPLACE TRIGGER TRG_AUD_SNH_DETREV
BEFORE INSERT OR UPDATE ON HOSPITALARIO.SNH_DET_REVERSIONES_EGRESOS FOR EACH ROW
BEGIN
    IF INSERTING THEN
     --  :NEW.REVERSION_EGRESO_ID := HOSPITALARIO.SNH_S_REVERSION_EGRESO_ID.NEXTVAL;
       :NEW.FECHA_REGISTRO      := SYSDATE;
    ELSE
       IF :NEW.USUARIO_MODIFICACION IS NULL THEN
           RAISE_APPLICATION_ERROR (-20000, 'El usuario modificación no puede quedar nulo.');
       ELSE
       :NEW.FECHA_MODIFICACION   := SYSDATE;
       END IF;
    END IF;
END;
/



-- estado registro
CREATE OR REPLACE TRIGGER HOSPITALARIO.TRG_SNH_INGREGR_DETREV
BEFORE INSERT OR UPDATE OF ESTADO_REGISTRO_ID ON HOSPITALARIO.SNH_DET_REVERSIONES_EGRESOS FOR EACH ROW
BEGIN
    IF INSERTING THEN
      IF  (:NEW.ESTADO_REGISTRO_ID IS NOT NULL AND :NEW.ESTADO_REGISTRO_ID > 0)   THEN
             DECLARE
              vCONTEO     SIMPLE_INTEGER := 0;
              vCatalogoId CATALOGOS.SBC_CAT_CATALOGOS.CATALOGO_ID%TYPE;
             BEGIN
              SELECT COUNT (1)
                INTO vCONTEO
                FROM CATALOGOS.SBC_CAT_CATALOGOS
               WHERE CATALOGO_ID = :NEW.ESTADO_REGISTRO_ID AND
                     PASIVO = 0 AND
                     CATALOGO_SUP IS NOT NULL;
                
                CASE vCONTEO 
                WHEN 0 THEN
                     RAISE_APPLICATION_ERROR (-20000, 'El estado del registro, no es un valor valido. Estado registro id: '||:NEW.ESTADO_REGISTRO_ID);
                ELSE
                    BEGIN
                      vCONTEO := 0;
                      SELECT CATALOGO_SUP
                        INTO vCatalogoId
                        FROM CATALOGOS.SBC_CAT_CATALOGOS
                       WHERE CATALOGO_ID = :NEW.ESTADO_REGISTRO_ID AND
                             PASIVO = 0 ;
                    
                        BEGIN
                          SELECT COUNT (1)
                            INTO vCONTEO
                            FROM CATALOGOS.SBC_CAT_CATALOGOS
                           WHERE CATALOGO_ID = vCatalogoId AND
                                 PASIVO = 0 AND
                                 CODIGO = 'STREG';       
                           CASE vCONTEO 
                           WHEN 0 THEN
                                RAISE_APPLICATION_ERROR (-20000, 'El estado registro, no es un valor valido. Estado registro id: '||:NEW.ESTADO_REGISTRO_ID);                
                           ELSE NULL;
                           END CASE;
                        END;  
                    END;
                END CASE;
             END;
      END IF;
    ELSIF UPDATING THEN
       IF :NEW.ESTADO_REGISTRO_ID IS NOT NULL THEN
         IF NVL(:NEW.ESTADO_REGISTRO_ID,0) != NVL(:OLD.ESTADO_REGISTRO_ID,0) THEN
             DECLARE
              vCONTEO SIMPLE_INTEGER := 0;
              vCatalogoId CATALOGOS.SBC_CAT_CATALOGOS.CATALOGO_ID%TYPE;
             BEGIN
              SELECT COUNT (1)
                INTO vCONTEO
                FROM CATALOGOS.SBC_CAT_CATALOGOS
               WHERE CATALOGO_ID = :NEW.ESTADO_REGISTRO_ID AND
                     PASIVO = 0 AND
                     CATALOGO_SUP IS NOT NULL;
                
                CASE vCONTEO 
                WHEN 0 THEN
                     RAISE_APPLICATION_ERROR (-20000, 'El estado registro, no es un valor valido. Estado registro id: '||:NEW.ESTADO_REGISTRO_ID);
                ELSE
                    BEGIN
                      vCONTEO := 0;
                      SELECT CATALOGO_SUP
                        INTO vCatalogoId
                        FROM CATALOGOS.SBC_CAT_CATALOGOS
                       WHERE CATALOGO_ID = :NEW.ESTADO_REGISTRO_ID AND
                             PASIVO = 0 ;
                    
                        BEGIN
                          SELECT COUNT (1)
                            INTO vCONTEO
                            FROM CATALOGOS.SBC_CAT_CATALOGOS
                           WHERE CATALOGO_ID = vCatalogoId AND
                                 PASIVO = 0 AND
                                 CODIGO = 'STREG';       
                           CASE vCONTEO 
                           WHEN 0 THEN
                                RAISE_APPLICATION_ERROR (-20000, 'El estado registro, no es un valor valido. Estado registro id: '||:NEW.ESTADO_REGISTRO_ID);                
                           ELSE NULL;
                           END CASE;
                        END;  
                    END;
                END CASE;            
             END;  
         END IF;
       END IF;
    END IF;
END;
/


ALTER TABLE HOSPITALARIO.SNH_DET_REVERSIONES_EGRESOS ADD (
  CONSTRAINT FRK_DETREV_INGRESO_ID 
  FOREIGN KEY (INGRESO_ID) 
  REFERENCES HOSPITALARIO.SNH_MST_INGRESOS_EGRESOS (INGRESO_ID)
  ENABLE VALIDATE,
  CONSTRAINT FRK_DETREV_RAZON_REVERSION_ID 
  FOREIGN KEY (RAZON_REVERSION_ID) 
  REFERENCES CATALOGOS.SBC_CAT_CATALOGOS (CATALOGO_ID)
  ENABLE VALIDATE,
  CONSTRAINT FK_DETREV_MPERSALUD_EGRESO_ID 
  FOREIGN KEY (MPERSALUD_EGRESO_ID) 
  REFERENCES CATALOGOS.SBC_MST_MPERS_SALUD (MPERS_SALUD_ID)
  ENABLE VALIDATE,  
  CONSTRAINT FRK_DETREV_REFERENCIA_ID 
  FOREIGN KEY (REFERENCIA_CANCELADA_ID) 
  REFERENCES HOSPITALARIO.SNH_MST_REFERENCIAS (REFERENCIA_ID)
  ENABLE VALIDATE,
  CONSTRAINT FRK_DETREV_CONTRAREF_ID 
  FOREIGN KEY (CONTRAREFERENCIA_CANCELADA_ID) 
  REFERENCES HOSPITALARIO.SNH_MST_REFERENCIAS (REFERENCIA_ID)
  ENABLE VALIDATE,
  CONSTRAINT FRK_DETREV_ESTADO_REG_ID 
  FOREIGN KEY (ESTADO_REGISTRO_ID) 
  REFERENCES CATALOGOS.SBC_CAT_CATALOGOS (CATALOGO_ID)
  ENABLE VALIDATE,  
  CONSTRAINT FRK_DETREV_USR_REGISTRO 
  FOREIGN KEY (USUARIO_REGISTRO) 
  REFERENCES SEGURIDAD.SCS_MST_USUARIOS (USERNAME)
  ENABLE VALIDATE,
  CONSTRAINT FRK_DETREV_USR_MODIFCACION 
  FOREIGN KEY (USUARIO_MODIFICACION) 
  REFERENCES SEGURIDAD.SCS_MST_USUARIOS (USERNAME)
  ENABLE VALIDATE,
  CONSTRAINT FRK_DETREV_USR_PASIVO 
  FOREIGN KEY (USUARIO_PASIVA) 
  REFERENCES SEGURIDAD.SCS_MST_USUARIOS (USERNAME)
  ENABLE VALIDATE  
  );
  
  
