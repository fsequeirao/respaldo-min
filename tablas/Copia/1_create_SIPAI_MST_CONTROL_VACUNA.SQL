CREATE SEQUENCE SIPAI_S_CONTROL_VACUNA_ID
  START WITH 1
  MAXVALUE 999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  ORDER
  NOKEEP
  GLOBAL;
  
  
CREATE TABLE SIPAI_MST_CONTROL_VACUNA
(
  CONTROL_VACUNA_ID             NUMBER(10) CONSTRAINT PK_SIP_CONTROL_VACUNA_ID PRIMARY KEY NOT NULL,
  EXPEDIENTE_ID                 NUMBER(10) CONSTRAINT NNC_SIP_EXPEDIENTE_ID NOT NULL,
  PROGRAMA_VACUNA_ID            NUMBER(10) CONSTRAINT NNC_SIP_PROG_VACUNA_ID NOT NULL,
  GRUPO_PRIORIDAD_ID            NUMBER(10) CONSTRAINT NNC_SIP_GRP_PRIORIDAD_ID NOT NULL,
  TIPO_VACUNA_ID                NUMBER(10) CONSTRAINT NNC_SIP_TIPO_VACUNA_ID NOT NULL,
  CANTIDAD_VACUNA_APLICADA      NUMBER(10),
  CANTIDAD_VACUNA_PROGRAMADA    NUMBER(10),
  FECHA_INICIO_VACUNA           DATE,
  FECHA_FIN_VACUNA              DATE,
  ESTADO_REGISTRO_ID            NUMBER(10) CONSTRAINT NNC_SIP_ESTADO_REG_ID NOT NULL,
  USUARIO_REGISTRO              VARCHAR2(50 BYTE) CONSTRAINT NNC_SIP_USR_REGISTRO NOT NULL,
  FECHA_REGISTRO                TIMESTAMP(0)   DEFAULT SYSTIMESTAMP CONSTRAINT NNC_SIP_FECHA_REGISTRO NOT NULL,
  USUARIO_MODIFICACION          VARCHAR2(50 BYTE),
  FECHA_MODIFICACION            TIMESTAMP(0),
  USUARIO_PASIVA                VARCHAR2(50 BYTE),
  FECHA_PASIVO                  TIMESTAMP(0)
  );
  

CREATE UNIQUE INDEX IDX_UI_SIPAI_CONTROL_ID ON SIPAI_MST_CONTROL_VACUNA
(CONTROL_VACUNA_ID);

CREATE INDEX IDX_SIPAI_PROGRAMA_ID ON SIPAI_MST_CONTROL_VACUNA
(PROGRAMA_VACUNA_ID);

CREATE INDEX IDX_SIPAI_GRP_PRIORIDAD_ID ON SIPAI_MST_CONTROL_VACUNA
(GRUPO_PRIORIDAD_ID);

CREATE INDEX IDX_SIPAI_GRP_TIPO_VACUNA_ID ON SIPAI_MST_CONTROL_VACUNA
(TIPO_VACUNA_ID);


CREATE INDEX IDX_SIPAI_EXPEDIENTE_ID ON SIPAI_MST_CONTROL_VACUNA
(EXPEDIENTE_ID);


  
CREATE OR REPLACE TRIGGER TRG_AUD_SIPAI_CONTROL_VACUNA
BEFORE INSERT OR UPDATE ON SIPAI_MST_CONTROL_VACUNA FOR EACH ROW
BEGIN
    IF INSERTING THEN
       :NEW.CONTROL_VACUNA_ID  := SIPAI_S_CONTROL_VACUNA_ID.NEXTVAL;
       :NEW.FECHA_REGISTRO     := SYSDATE;
    ELSE
       IF :NEW.USUARIO_MODIFICACION IS NULL THEN
           RAISE_APPLICATION_ERROR (-20000, 'El usuario modificación no puede quedar nulo.');
       ELSE
       :NEW.FECHA_MODIFICACION   := SYSDATE;
       END IF;
    END IF;
END;
/

ALTER TABLE SIPAI_MST_CONTROL_VACUNA ADD (
  CONSTRAINT PK_CONTROL_ID
  PRIMARY KEY
  (CONTROL_VACUNA_ID)
  USING INDEX catalogos.PK_PERSONA_ID
  ENABLE VALIDATE);


ALTER TABLE SIPAI_MST_CONTROL_VACUNA ADD (
  CONSTRAINT FK_SIPAI_ESTADO_REG_ID 
  FOREIGN KEY (ESTADO_REGISTRO_ID) 
  REFERENCES CATALOGOS.SBC_CAT_CATALOGOS (CATALOGO_ID)
  ENABLE VALIDATE,
  CONSTRAINT FK_SIPAI_CEXP_EXPEDIENTE 
  FOREIGN KEY (EXPEDIENTE_ID) 
  REFERENCES HOSPITALARIO.SNH_MST_CODIGO_EXPEDIENTE (EXPEDIENTE_ID)
  ENABLE VALIDATE,
  CONSTRAINT FK_SIPAI_PROGRAMA_ID 
  FOREIGN KEY (PROGRAMA_VACUNA_ID) 
  REFERENCES CATALOGOS.SBC_CAT_CATALOGOS (CATALOGO_ID)
  ENABLE VALIDATE,
  CONSTRAINT FK_SIPAI_GRUPO_PRIORIDAD_ID 
  FOREIGN KEY (GRUPO_PRIORIDAD_ID) 
  REFERENCES CATALOGOS.SBC_CAT_CATALOGOS (CATALOGO_ID)
  ENABLE VALIDATE,
  CONSTRAINT FK_SIPAI_TIPO_VACUNA_ID 
  FOREIGN KEY (TIPO_VACUNA_ID) 
  REFERENCES CATALOGOS.SBC_CAT_CATALOGOS (CATALOGO_ID)
  ENABLE VALIDATE,
  CONSTRAINT FK_SIPAI_USR_MODIFCACION 
  FOREIGN KEY (USUARIO_MODIFICACION) 
  REFERENCES SEGURIDAD.SCS_MST_USUARIOS (USERNAME)
  ENABLE VALIDATE,
  CONSTRAINT FK_SIPAI_USR_PASIVO 
  FOREIGN KEY (USUARIO_PASIVA) 
  REFERENCES SEGURIDAD.SCS_MST_USUARIOS (USERNAME)
  ENABLE VALIDATE,
  CONSTRAINT FK_SIPAI_USR_REGISTRO 
  FOREIGN KEY (USUARIO_REGISTRO) 
  REFERENCES SEGURIDAD.SCS_MST_USUARIOS (USERNAME)
  ENABLE VALIDATE);

